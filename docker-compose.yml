name: rustgenie
services:
  # Database
  db:
    image: timescale/timescaledb-ha:pg17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rustgenie
    ports:
      - "5432:5432"
    volumes:
      - data:/home/postgres/pgdata/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  # Vector database support
  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:latest
    environment:
      PGAI_VECTORIZER_WORKER_DB_URL: postgres://postgres:postgres@db:5432/rustgenie
    command: [ "--poll-interval", "5s", "--log-level", "DEBUG" ]
    depends_on:
      db:
        condition: service_healthy

  # Email testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    restart: unless-stopped

  # AI services
  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    profiles: ["ai", "dev", "prod"]

  # Pull and serve Gemma model
  gemma-setup:
    image: ollama/ollama:latest
    volumes:
      - ollama_data:/root/.ollama
    depends_on:
      - ollama
    command: pull gemma:7b
    restart: on-failure
    profiles: ["ai", "dev", "prod"]

  # Production services
  app:
    build:
      context: .
      dockerfile: app/Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/rustgenie
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      OLLAMA_API_URL: http://ollama:11434
      OLLAMA_MODEL: gemma:7b
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
      ollama:
        condition: service_started
    restart: unless-stopped
    profiles: ["prod"]

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/rustgenie
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      OLLAMA_API_URL: http://ollama:11434
      OLLAMA_MODEL: gemma:7b
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
      ollama:
        condition: service_started
    restart: unless-stopped
    profiles: ["prod"]

  # Development environment with live reload
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"  # App server
      - "3000:3000"  # Vite dev server
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/rustgenie
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      OLLAMA_API_URL: http://ollama:11434
      OLLAMA_MODEL: gemma:7b
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
      ollama:
        condition: service_started
    profiles: ["dev"]
    tty: true
    stdin_open: true

volumes:
  data:
  ollama_data:
