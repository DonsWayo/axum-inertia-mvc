name: axum-inertia-mvc
services:
  db:
    image: timescale/timescaledb-ha:pg17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: axum_inertia_mvc
    ports:
      - "5432:5432"
    volumes:
      - data:/home/postgres/pgdata/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:latest
    environment:
      PGAI_VECTORIZER_WORKER_DB_URL: postgres://postgres:postgres@db:5432/axum_inertia_mvc
    command: [ "--poll-interval", "5s", "--log-level", "DEBUG" ]
    depends_on:
      db:
        condition: service_healthy

  # Production services
  app:
    build:
      context: .
      dockerfile: app/Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/axum_inertia_mvc
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    profiles: ["prod"]

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/axum_inertia_mvc
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    profiles: ["prod"]

  # Development environment with live reload
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"  # App server
      - "3000:3000"  # Vite dev server
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/axum_inertia_mvc
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    profiles: ["dev"]
    tty: true
    stdin_open: true

volumes:
  data:
